mySamp <- rpois(1000, lambda = 3)
hist(mySamp, freq = F)
lines(density(mySamp), lwd = 2, lty = "dashed", col = "red")
myMean <- NULL
nSam <- 5
nIter <- 1000
for (i in 1:1000){
sampTmp <- rpois(5, lambda = 3)
myMean[i] <- mean(sampTmp)
}
hist(myMean, freq = F)
lines(density(myMean), lwd = 2, lty = "dashed", col = "red")
mySamp <- rpois(1000, lambda = 2)
hist(mySamp, freq = F)
lines(density(mySamp), lwd = 2, lty = "dashed", col = "red")
myMean <- NULL
nSam <- 5
nIter <- 1000
for (i in 1:1000){
sampTmp <- rpois(5, lambda = 2)
myMean[i] <- mean(sampTmp)
}
hist(myMean, freq = F)
lines(density(myMean), lwd = 2, lty = "dashed", col = "red")
?rnorm
install.packages("nettheory")
install.packages("nettheory")
library(nettheory)
setwd("/Users/burrelvannjr/Dropbox/Professional/Courses/Enrolled/Winter 2015/Network Theory/hw2")
require(graphics)
library(sna)                  	# Make sure that sna and network are loaded
library(network)
library(nettheory)
library(igraph)
transsim(10,10,initial.density=0.15)
transsim(10,10,initial.density=0.15,usearrows=F,return.graph=T)
transsim(10,10,initial.density=0.15,usearrows=F,return.graph=T)
transsim(10,10,initial.density=0.15,usearrows=F,return.graph=T,action.prob.red=c(.9,.05,.05),action.prob.blue=c(.05,.9,.05))
transsim(10,10,initial.density=0.15,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
transsim(10,10,initial.density=0.2,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
transsim(10,10,initial.density=0.9,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
transsim(10,10,initial.density=1,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
transsim(10,10,initial.density=.1,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
transsim(10,10,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
transsim(10,10,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
transsim(10,10,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
transsim(10,10,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
transsim(10,10,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
transsim(10,10,usearrows=F,return.graph=T,action.prob.red=c(.95,.025,.025),action.prob.blue=c(.025,.95,.025))
library(sna)
library(network)
library(relevent)
library(nettheory)
library(ergm)
data(package = "ergm")
? "faux.mesa.high"
?ergm
install.packages(dplyr)
install.packages("dplyr")
install.packages("tidyr")
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
library(tidyr)
?tidyr
??tidyr
setwd("/Users/burrelvannjr/Desktop/package")
data<-read.csv("florida_final.csv",header=TRUE,sep=",")
save()
save(data,file="data.Rda")
P<-(data$tprallies>=1)*1
R<-(data$reppct2008>=49.62)*1
C<-(data$pctBA25>=(mean(data$pctBA25)))*1
U<-(data$pctunemp>=(mean(data$pctunemp)))*1
save(data,file="data.Rda")
